name: Create Release

on:
  push:
    branches:
      - main  # Change this to your default branch if it's not 'main'

permissions:
  contents: write  # Required to create releases

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

        
      - name: Get all pushed commits
        id: commit_info
        shell: pwsh
        run: |
            $payload = Get-Content $env:GITHUB_EVENT_PATH | ConvertFrom-Json
            $allCommits = $payload.commits
            $messages = ""

            foreach ($commit in $allCommits) {
                $lines = $commit.message -split "`n"
                $summary = $lines[0]
                $messages += "- **$summary**`n"

                if ($lines.Length -gt 1) {
                    $bodyLines = $lines[1..($lines.Length - 1)]
                    foreach ($line in $bodyLines) {
                        $trimmed = $line.Trim()
                        if ($trimmed) {
                            $messages += "  - $trimmed`n"
                        }
                    }
                }
            }

            # Write raw multi-line string to a temporary file
            Set-Content -Path commit_message.txt -Value $messages -Encoding UTF8

            # Set output using file reference
            echo "description<<EOF" >> $env:GITHUB_OUTPUT
            Get-Content commit_message.txt | ForEach-Object { echo $_ } >> $env:GITHUB_OUTPUT
            echo "EOF" >> $env:GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.${{ github.run_number }}  # Use a unique tag for each release
          name: Release v1.0.${{ github.run_number }}
          body: |
            Changes in this release:
            ${{ steps.commit_info.outputs.description }}
          files: |
            GozarCraft-Complementary-Settings.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}